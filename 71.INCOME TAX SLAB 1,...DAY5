#include <iostream>
using namespace std;
class IncomeTax {
protected:
    double income;

public:
    IncomeTax(double i) {
        income = i;
    }

    virtual double TDS() = 0; 
};
class Slab1 : public IncomeTax {
public:
    Slab1(double i) : IncomeTax(i) {}

    double TDS() {
        return 0;
    }
};
class Slab2 : public IncomeTax {
public:
    Slab2(double i) : IncomeTax(i) {}

    double TDS() {
        return (income - 150000) * 0.1;
    }
};
class Slab3 : public IncomeTax {
public:
    Slab3(double i) : IncomeTax(i) {}

    double TDS() {
        if (income <= 300000)
            return (income - 150000) * 0.1;
        else if (income <= 500000)
            return (150000 * 0.1) + ((income - 300000) * 0.2);
        else
            return (150000 * 0.1) + (200000 * 0.2) + ((income - 500000) * 0.3);
    }
};

int main() {
    double income;

    cout << "Enter income: ";
    cin >> income;

    IncomeTax* tax;

    if (income <= 150000)
        tax = new Slab1(income);
    else if (income <= 300000)
        tax = new Slab2(income);
    else
        tax = new Slab3(income);

    cout << "Tax: " << tax->TDS() << endl;

    delete tax;

    return 0;
}


